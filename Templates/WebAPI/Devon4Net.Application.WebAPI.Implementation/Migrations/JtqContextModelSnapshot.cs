// <auto-generated />
using System;
using Devon4Net.Application.WebAPI.Implementation.Domain.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Devon4Net.Application.WebAPI.Implementation.Migrations
{
    [DbContext(typeof(JtqContext))]
    partial class JtqContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Devon4Net.Application.WebAPI.Implementation.Domain.Entities.AccessCode", b =>
                {
                    b.Property<string>("IdaccessCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("IDAccessCode");

                    b.Property<string>("CreationTime")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("creationTime");

                    b.Property<string>("EndTime")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endTime");

                    b.Property<string>("QueueId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("queueID");

                    b.Property<string>("StartTime")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("startTime");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ticketNumber");

                    b.Property<string>("VisitorId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("visitorID");

                    b.HasKey("IdaccessCode")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "VisitorId" }, "AccessCode_FK");

                    b.HasIndex(new[] { "QueueId" }, "AccessCode_FK_1");

                    b.ToTable("AccessCode", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("Devon4Net.Application.WebAPI.Implementation.Domain.Entities.Prueba", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("prueba", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("Devon4Net.Application.WebAPI.Implementation.Domain.Entities.Queue", b =>
                {
                    b.Property<string>("Idqueue")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("IDQueue");

                    b.Property<bool?>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AttentionTime")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("attentionTime");

                    b.Property<string>("CurrentNumber")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("currentNumber")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("Customers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customers")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Logo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("logo");

                    b.Property<string>("MinAttentionTime")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("minAttentionTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Idqueue")
                        .HasName("PRIMARY");

                    b.ToTable("Queue", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("Devon4Net.Application.WebAPI.Implementation.Domain.Entities.Visitor", b =>
                {
                    b.Property<string>("Idvisitor")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("IDVisitor");

                    b.Property<bool?>("AcceptedCommercial")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("acceptedCommercial");

                    b.Property<bool?>("AcceptedTerms")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("acceptedTerms");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("phoneNumber");

                    b.Property<bool?>("UserType")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("userType");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Idvisitor")
                        .HasName("PRIMARY");

                    b.ToTable("Visitor", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("Devon4Net.Application.WebAPI.Implementation.Domain.Entities.AccessCode", b =>
                {
                    b.HasOne("Devon4Net.Application.WebAPI.Implementation.Domain.Entities.Queue", "Queue")
                        .WithMany("AccessCodes")
                        .HasForeignKey("QueueId")
                        .IsRequired()
                        .HasConstraintName("AccessCode_FK_1");

                    b.HasOne("Devon4Net.Application.WebAPI.Implementation.Domain.Entities.Visitor", "Visitor")
                        .WithMany("AccessCodes")
                        .HasForeignKey("VisitorId")
                        .IsRequired()
                        .HasConstraintName("AccessCode_FK");

                    b.Navigation("Queue");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("Devon4Net.Application.WebAPI.Implementation.Domain.Entities.Queue", b =>
                {
                    b.Navigation("AccessCodes");
                });

            modelBuilder.Entity("Devon4Net.Application.WebAPI.Implementation.Domain.Entities.Visitor", b =>
                {
                    b.Navigation("AccessCodes");
                });
#pragma warning restore 612, 618
        }
    }
}
